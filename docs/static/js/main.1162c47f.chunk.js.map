{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","console","log","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+MAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCPlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKC,UAAU,wCACX,yBAAMC,IAAMF,EAAMG,IAAMJ,IACxB,2BAAKA,EAAL,O,uBCPCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,sDAGnBG,QAAQC,IAAIT,GAHO,SAICU,MAAMV,GAJP,cAIbW,EAJa,gBAKKA,EAAKC,OALV,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHlB,GAAGkB,EAAIlB,GACPC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAXvB,kBAeZc,GAfY,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAW,WACPnB,EAASC,GACJmB,MAAM,SAAAC,GAECH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAI1B,CAAEf,IAEEgB,EDZ0BK,CAAcrB,GAAlCY,EAJwB,EAI7BJ,KAAaO,EAJgB,EAIhBA,QAUrB,OACI,oCACI,4BAAMf,GAEJe,GAAW,uCAEb,yBAAKnB,UAAU,aAETgB,EAAOF,KAAK,SAACC,GAAD,OACX,kBAAC,EAAD,eAAaW,IAAMX,EAAIlB,IAAWkB,UExBxCY,EAAgB,WAAM,MAGK5C,mBAAS,CAAE,gBAHhB,mBAGxB6C,EAHwB,KAGZ9C,EAHY,KAS/B,OACI,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ8C,EAAWd,KAAK,SAAAV,GAAQ,OACpB,kBAAC,EAAD,CACIA,SAAWA,EACXsB,IAAMtB,UCnBlCyB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1162c47f.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}   \r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__tada\">\r\n            <img  src={ url } alt={ title } />\r\n            <p>{ title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Le5LrVnoP74N1KRoofK045iVyRIPVIhF`;\r\n\r\n    console.log(url);\r\n    const resp =  await fetch(url);\r\n    const { data }  = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n    \r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( setImages) \r\n    // }, [ category ]);\r\n\r\n    // getGifts()\r\n\r\n    return(\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Loading </p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                { images.map( (img) => (\r\n                   <GifGridItem key={ img.id } { ... img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n          \r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false  \r\n                    })      \r\n                \r\n            })\r\n    }, [ category ])\r\n\r\n    return state;\r\n}","import React, { useState}  from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n    \r\n    // const categories = [ 'One punch' , 'One Piece', 'Dragon Ball' ];\r\n    const [categories, setCategories] = useState([ 'Dragon Ball' ]); \r\n\r\n    // const handleApp = () => {\r\n    //     setCategories( [...categories , 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <> \r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>  (\r\n                        <GifGrid \r\n                            category={ category } \r\n                            key={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}